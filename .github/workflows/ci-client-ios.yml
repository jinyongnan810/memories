name: CI/client-ios

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "ios/**"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - "**"
    paths:
      - "ios/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  function:
    runs-on: macos-14
    if: github.event.pull_request.draft == false
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Get Flutter version
        run: |
          asdf_flutter_version="$(cat .tool-versions | awk '{print $2}')"
          flutter_version="$(echo $asdf_flutter_version | sed -e 's/-stable//g')"
          echo "FLUTTER_VERSION=$flutter_version" >> $GITHUB_ENV
      - name: Cache Flutter
        uses: actions/cache@v4
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-${{ env.FLUTTER_VERSION }}
      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            pods-
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: Install dependencies
        run: flutter pub get
      - name: Generate Code
        run: dart run build_runner build --delete-conflicting-outputs
      - name: Generate env files
        env:
          CLIENT_ENV: ${{ secrets.CLIENT_ENV }}
        run: echo "${CLIENT_ENV}" > env
      - name: Install Pods
        working-directory: ios
        run: pod install

      - name: Lint iOS
        working-directory: ios
        run: Pods/SwiftLint/swiftlint lint ios/ --strict --config ios/.swiftlint.yml --reporter markdown > reports/ios-lint.md
